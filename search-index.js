var searchIndex = JSON.parse('{\
"juicebox_asm":{"doc":"","t":[3,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,11,11,8,2,8,3,3,3,3,8,8,8,3,2,8,4,4,4,4,8,10,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,11,11,11,11,11,11,11,11,13,10,13,13,13,13,11,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11],"n":["Asm","Indirect","IndirectDisp","MemOp","add","add","bind","borrow","borrow","borrow_mut","borrow_mut","dec","dec","from","from","into","into","into_code","jmp","jnz","jz","mov","mov","mov","mov","mov","mov","mov","mov","mov","mov","mov","mov","mov","mov","mov","mov","new","prelude","resolve","ret","rt","test","test","try_from","try_from","try_into","try_into","type_id","type_id","Add","Asm","Dec","Imm16","Imm32","Imm64","Imm8","Jmp","Jnz","Jz","Label","MemOp","Mov","Reg16","Reg32","Reg64","Reg8","Test","add","ah","al","ax","bh","bl","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bp","bpl","bx","ch","cl","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cx","dec","dh","di","dil","dl","drop","dx","eax","ebp","ebx","ecx","edi","edx","esi","esp","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","jmp","jnz","jz","mov","new","r10","r10d","r10l","r10w","r11","r11d","r11l","r11w","r12","r12d","r12l","r12w","r13","r13d","r13l","r13w","r14","r14d","r14l","r14w","r15","r15d","r15l","r15w","r8","r8d","r8l","r8w","r9","r9d","r9l","r9w","rax","rbp","rbx","rcx","rdi","rdx","rsi","rsp","si","sil","sp","spl","test","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Runtime","as_fn","borrow","borrow_mut","drop","from","into","new","try_from","try_into","type_id"],"q":["juicebox_asm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","juicebox_asm::preludejuicebox_asm::rt","","","","","","","","","",""],"d":["","","","","","","Bind the Label to the current location.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","If the Label is bound, patch any pending relocation.","","","","","","","","","","","","","","Immediate operand.","Immediate operand.","Immediate operand.","Immediate operand.","","","","A label which is used as target for jump instructions.","","","General purpose register operands.","General purpose register operands.","General purpose register operands.","General purpose register operands.","","Emit an add instruction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Emit a decrement instruction.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Emit an unconditional jump instruction.","Emit a conditional jump if not zero instruction (<code>ZF = 0</code>).","Emit a conditional jump if zero instruction (<code>ZF = 1</code>).","Emit an move instruction.","Create a new <code>unbound</code> Label.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Emit a logical compare instruction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A simple <code>mmap</code>ed runtime with executable pages.","Reinterpret the block of code as <code>F</code>.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new Runtime.","","",""],"i":[0,7,7,0,1,1,1,7,1,7,1,1,1,7,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,7,1,7,1,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,9,9,8,9,9,4,10,11,12,13,3,2,8,9,4,10,11,12,13,3,2,8,9,8,9,8,9,9,3,2,8,9,3,2,8,9,8,25,9,8,9,9,4,8,2,2,2,2,2,2,2,2,4,10,10,10,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,3,2,8,9,4,10,11,12,13,3,2,8,9,26,27,28,29,4,3,2,9,8,3,2,9,8,3,2,9,8,3,2,9,8,3,2,9,8,3,2,9,8,3,2,9,8,3,2,9,8,3,3,3,3,3,3,3,3,8,9,8,9,30,3,2,8,9,4,10,11,12,13,3,2,8,9,4,10,11,12,13,3,2,8,9,4,10,11,12,13,3,2,8,9,0,23,23,23,23,23,23,23,23,23,23],"f":[0,0,0,0,[[1,2,2]],[[1,3,3]],[[1,4]],[[]],[[]],[[]],[[]],[[1,2]],[[1,3]],[[]],[[]],[[]],[[]],[1,[[6,[5]]]],[[1,4]],[[1,4]],[[1,4]],[[1,7,8]],[[1,3,7]],[[1,3,3]],[[1,2,2]],[[1,9,10]],[[1,8,11]],[[1,2,12]],[[1,3,13]],[[1,9,7]],[[1,8,7]],[[1,2,7]],[[1,8,8]],[[1,7,9]],[[1,9,9]],[[1,7,3]],[[1,7,2]],[[],1],0,[[1,4]],[1],0,[[1,2,2]],[[1,3,3]],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[3,3],[2,2],[8,8],[9,9],[[]],[[]],[[]],[[]],0,[[]],0,0,0,0,[4],0,0,0,0,0,0,0,0,0,[[]],[5,10],[16,10],[[]],[[]],[17,11],[5,11],[16,11],[18,11],[19,12],[16,12],[5,12],[[]],[17,12],[18,12],[20,12],[[]],[18,13],[20,13],[19,13],[21,13],[22,13],[5,13],[16,13],[17,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[23],[[]],[[]],[23],[[]],[[]],[[],23],[[],14],[[],14],[[],15]],"p":[[3,"Asm"],[4,"Reg32"],[4,"Reg64"],[3,"Label"],[15,"u8"],[3,"Vec"],[4,"MemOp"],[4,"Reg16"],[4,"Reg8"],[3,"Imm8"],[3,"Imm16"],[3,"Imm32"],[3,"Imm64"],[4,"Result"],[3,"TypeId"],[15,"i8"],[15,"i16"],[15,"u16"],[15,"u32"],[15,"i32"],[15,"i64"],[15,"u64"],[3,"Runtime"],[8,"Add"],[8,"Dec"],[8,"Jmp"],[8,"Jnz"],[8,"Jz"],[8,"Mov"],[8,"Test"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
